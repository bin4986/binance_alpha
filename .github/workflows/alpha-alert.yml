name: Binance Alpha Alert

on:
  workflow_dispatch:
  schedule:
    - cron: "*/5 * * * *"
  push:
    branches: [ main ]

concurrency:
  group: alpha-alert-${{ github.ref }}
  cancel-in-progress: true

jobs:
  run:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install requests

      # (선택) 즉석 송신 테스트 — 필요시 주석 해제
      # - name: Telegram direct test
      #   env:
      #     TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN || secrets.TELEGRAM_TOKEN }}
      #     TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
      #   run: |
      #     curl -s -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage" \
      #       -d "chat_id=${TELEGRAM_CHAT_ID}" \
      #       -d "text=✅ Direct test $(date -u +%F\ %T) UTC"

      - name: Run alpha_alert
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}          # 이름이 다른 저장소도 커버
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          ALWAYS_NOTIFY_NO_RESULT: "1"
          NO_RESULT_MESSAGE: "없으면 없음! ✅ (새 상장 알림 없음)"
          run: |
          python alpha_alert.py

      - name: Persist local state
        if: always()
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add seen_ids.json .alpha_alert_initialized || true
          git commit -m "chore: update state [skip ci]" || true
          git push || true
